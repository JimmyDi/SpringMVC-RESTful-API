/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.0
 * Generated at: 2017-11-02 22:04:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("\n");
      out.write("<title>Uikit Test</title>\n");
      out.write("\t<meta http-equiv=\"pragma\" content=\"no-cache\">\n");
      out.write("\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\n");
      out.write("\t<meta http-equiv=\"expires\" content=\"0\">\n");
      out.write("\t<meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\n");
      out.write("\t<meta http-equiv=\"description\" content=\"This is my page\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\"\thref=\"uikit-2.25.0/css/uikit.gradient.min.css\">\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"uikit-2.25.0/css/components/notify.gradient.min.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div\n");
      out.write("\tstyle=\"width:800px;margin-top:10px;margin-left: auto;margin-right: auto;text-align: center;\">\n");
      out.write("\t<h2>Uikit Test</h2>\n");
      out.write("</div>\n");
      out.write("<div style=\"width:800px;margin-left: auto;margin-right: auto;\">\n");
      out.write("\t<fieldset class=\"uk-form\">\n");
      out.write("\t\t<legend>Uikit form rendering Test</legend>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<input type=\"text\" class=\"uk-width-1-1\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<input type=\"text\" class=\"uk-width-1-1 uk-form-success\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<input type=\"text\" class=\"uk-width-1-1 uk-form-danger\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<input type=\"text\" class=\"uk-width-1-1\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<select id=\"form-s-s\">\n");
      out.write("\t\t\t\t<option>---Please Select---</option>\n");
      out.write("\t\t\t\t<option>Yes</option>\n");
      out.write("\t\t\t\t<option>No</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"uk-form-row\">\n");
      out.write("\t\t\t<input type=\"date\" id=\"form-h-id\" />\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t<fieldset class=\"uk-form\">\n");
      out.write("\t\t<legend>Resource Request Based on RESTful API</legend>\n");
      out.write("\t\t<button class=\"uk-button uk-button-primary uk-button-large\" id=\"btnGet\">Get People GET</button>\n");
      out.write("\t\t<button class=\"uk-button uk-button-primary uk-button-large\" id=\"btnAdd\">Add People POST</button>\n");
      out.write("\t\t<button class=\"uk-button uk-button-primary uk-button-large\" id=\"btnUpdate\">Update People PUT</button>\n");
      out.write("\t\t<button class=\"uk-button uk-button-danger uk-button-large\" id=\"btnDel\">Delete People DELETE</button>\n");
      out.write("\t\t<button class=\"uk-button uk-button-primary uk-button-large\" id=\"btnList\">Search List PATCH</button>\n");
      out.write("\t</fieldset>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"jquery-1.11.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"uikit-2.25.0/js/uikit.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"uikit-2.25.0/js/components/notify.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t(function(window,$){\n");
      out.write("\n");
      out.write("\t\tvar dekota={\n");
      out.write("\t\t\t\n");
      out.write("\t\t\turl:'',\n");
      out.write("\n");
      out.write("\t\t\tinit:function(){\n");
      out.write("\t\t\t\tdekota.url='");
      out.print(basePath);
      out.write("';\n");
      out.write("\t\t\t\t$.UIkit.notify(\"initialization complete\", {status:'info',timeout:500});\n");
      out.write("\t\t\t\t$(\"#btnGet\").click(dekota.getPerson);\n");
      out.write("\t\t\t\t$(\"#btnAdd\").click(dekota.addPerson);\n");
      out.write("\t\t\t\t$(\"#btnDel\").click(dekota.delPerson);\n");
      out.write("\t\t\t\t$(\"#btnUpdate\").click(dekota.updatePerson);\n");
      out.write("\t\t\t\t$(\"#btnList\").click(dekota.listPerson);\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tgetPerson:function(){\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: dekota.url + 'person/101/',\n");
      out.write("\t\t\t\t\ttype: 'GET',\n");
      out.write("\t\t\t\t\tdataType: 'json'\n");
      out.write("\t\t\t\t}).done(function(data, status, xhr) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Get People Succeed\", {status:'success',timeout:1000});\n");
      out.write("\t\t\t\t}).fail(function(xhr, status, error) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Fail!\", {status:'danger',timeout:2000});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\taddPerson:function(){\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: dekota.url + 'person',\n");
      out.write("\t\t\t\t\ttype: 'POST',\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\tdata: {id: 1,name:'Zhang San',sex:'Male',age:23}\n");
      out.write("\t\t\t\t}).done(function(data, status, xhr) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(data.msg, {status:'success',timeout:1000});\n");
      out.write("\t\t\t\t}).fail(function(xhr, status, error) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Fail！\", {status:'danger',timeout:2000});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tdelPerson:function(){\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: dekota.url + 'person/109',\n");
      out.write("\t\t\t\t\ttype: 'DELETE',\n");
      out.write("\t\t\t\t\tdataType: 'json'\n");
      out.write("\t\t\t\t}).done(function(data, status, xhr) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(data.msg, {status:'success',timeout:1000});\n");
      out.write("\t\t\t\t}).fail(function(xhr, status, error) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Fail！\", {status:'danger',timeout:2000});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tupdatePerson:function(){\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: dekota.url + 'person',\n");
      out.write("\t\t\t\t\ttype: 'POST',\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\tdata: {_method:'PUT',id: 221,name:'Wang Wu',sex:'Male',age:23}\n");
      out.write("\t\t\t\t}).done(function(data, status, xhr) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(data.msg, {status:'success',timeout:1000});\n");
      out.write("\t\t\t\t}).fail(function(xhr, status, error) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Fail！\", {status:'danger',timeout:2000});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tlistPerson:function(){\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: dekota.url + 'person',\n");
      out.write("\t\t\t\t\ttype: 'POST',\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\tdata: {_method:'PATCH',name: 'Zhang San'}\n");
      out.write("\t\t\t\t}).done(function(data, status, xhr) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Search People Succeed\", {status:'success',timeout:1000});\n");
      out.write("\t\t\t\t}).fail(function(xhr, status, error) {\n");
      out.write("\t\t\t\t\t$.UIkit.notify(\"Fail！\", {status:'danger',timeout:2000});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\twindow.dekota=(window.dekota)?window.dekota:dekota;\n");
      out.write("\t\t$(function(){\n");
      out.write("\t\t\tdekota.init();\n");
      out.write("\t\t});\n");
      out.write("\t})(window,jQuery);\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
